# This is a basic workflow to help you get started with Actions

name: destroy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BUCKET_NAME: santosh-assignment3
  TFSTATE: new.tfstate
  aws-region: us-east-1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform_deploy:
    name: terraform_deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup terraform hashicorp
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          Aws-region: ${{env.aws-region}}

      # Runs a set of commands using the runners shell
      - name: terraform init
        run: 
          cd implementation
          terraform init -reconfigure -backend-config="bucket=${{env.BUCKET_NAME}}" -backend-config="key=${{env.TFSTATE}}"

      - name: terraform plan
        run: 
          cd implementation
          terraform plan -var-file="terraform.tfvars"

      - name: terraform apply
        run: 
          cd implementation
          terraform apply -var-file="terraform.tfvars" -auto-approve
